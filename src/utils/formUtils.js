import { Utils } from '@formio/core';
const {
  flattenComponents,
  guid,
  uniqueName,
  MODEL_TYPES_OF_KNOWN_COMPONENTS,
  getModelType,
  getComponentPath,
  setComponentScope,
  resetComponentScope,
  isComponentNestedDataType,
  componentPath,
  getComponentPaths,
  componentMatches,
  getBestMatch,
  getComponentFromPath,
  getComponentValue,
  findComponents,
  eachComponentDataAsync,
  eachComponentData,
  getComponentKey,
  getContextualRowPath,
  getContextualRowData,
  componentInfo,
  eachComponent,
  eachComponentAsync,
  getComponentData,
  getComponentActualValue,
  isLayoutComponent,
  matchComponent,
  getComponent,
  searchComponents,
  removeComponent,
  hasCondition,
  parseFloatExt,
  formatAsCurrency,
  escapeRegExCharacters,
  getValue,
  getStrings,
  generateFormChange,
  applyFormChanges,
  findComponent,
  getEmptyValue,
  isComponentDataEmpty,
  isSelectResourceWithObjectValue,
  compareSelectResourceWithObjectTypeValues,
  getItemTemplateKeys
} = Utils;

/**
 * Checks if the component is expected to have data in submission object.
 * @param {import('@formio/core').Component} component - The component to check.
 * @returns {boolean} - TRUE if the component is a data component.
 */
function isDataComponent(component) {
  const modelType = getModelType(component);
  return modelType !== 'none' && modelType !== 'content';
}

export {
  flattenComponents,
  guid,
  uniqueName,
  MODEL_TYPES_OF_KNOWN_COMPONENTS,
  getModelType,
  getComponentPath,
  setComponentScope,
  resetComponentScope,
  isComponentNestedDataType,
  componentPath,
  getComponentPaths,
  componentMatches,
  getBestMatch,
  getComponentFromPath,
  getComponentValue,
  findComponents,
  eachComponentDataAsync,
  eachComponentData,
  getComponentKey,
  getContextualRowPath,
  getContextualRowData,
  componentInfo,
  eachComponent,
  eachComponentAsync,
  getComponentData,
  getComponentActualValue,
  isLayoutComponent,
  matchComponent,
  getComponent,
  searchComponents,
  removeComponent,
  hasCondition,
  parseFloatExt,
  formatAsCurrency,
  escapeRegExCharacters,
  getValue,
  getStrings,
  generateFormChange,
  applyFormChanges,
  findComponent,
  getEmptyValue,
  isComponentDataEmpty,
  isSelectResourceWithObjectValue,
  compareSelectResourceWithObjectTypeValues,
  getItemTemplateKeys,
  isDataComponent
};
