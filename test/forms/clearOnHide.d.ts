declare namespace _default {
    const title: string;
    namespace form {
        const components: ({
            conditional: {
                eq: string;
                when: null;
                show: string;
            };
            tags: never[];
            type: string;
            validate: {
                required: boolean;
                minLength?: undefined;
                maxLength?: undefined;
                pattern?: undefined;
                customPrivate?: undefined;
            };
            clearOnHide: boolean;
            persistent: boolean;
            protected: boolean;
            defaultValue: boolean;
            key: string;
            datagridLabel: boolean;
            label: string;
            hideLabel: boolean;
            tableView: boolean;
            inputType: string;
            input: boolean;
            lockKey: boolean;
            hidden: boolean;
            name: string;
            value: string;
            inputMask?: undefined;
            placeholder?: undefined;
            prefix?: undefined;
            suffix?: undefined;
            multiple?: undefined;
            unique?: undefined;
            labelPosition?: undefined;
            properties?: undefined;
            tree?: undefined;
            components?: undefined;
            addAnotherPosition?: undefined;
            templates?: undefined;
            title?: undefined;
            theme?: undefined;
            breadcrumb?: undefined;
            columns?: undefined;
            customClass?: undefined;
            numRows?: undefined;
            numCols?: undefined;
            rows?: undefined;
            header?: undefined;
            caption?: undefined;
            striped?: undefined;
            bordered?: undefined;
            hover?: undefined;
            condensed?: undefined;
            legend?: undefined;
        } | {
            input: boolean;
            tableView: boolean;
            inputType: string;
            inputMask: string;
            label: string;
            key: string;
            placeholder: string;
            prefix: string;
            suffix: string;
            multiple: boolean;
            defaultValue: string;
            protected: boolean;
            unique: boolean;
            persistent: boolean;
            hidden: boolean;
            clearOnHide: boolean;
            validate: {
                required: boolean;
                minLength: string;
                maxLength: string;
                pattern: string;
                custom: string;
                customPrivate: boolean;
            };
            conditional: {
                show: string;
                when: string;
                eq: string;
            };
            type: string;
            hideLabel: boolean;
            labelPosition: string;
            tags: never[];
            properties: {};
            lockKey: boolean;
            datagridLabel?: undefined;
            name?: undefined;
            value?: undefined;
            tree?: undefined;
            components?: undefined;
            addAnotherPosition?: undefined;
            templates?: undefined;
            title?: undefined;
            theme?: undefined;
            breadcrumb?: undefined;
            columns?: undefined;
            customClass?: undefined;
            numRows?: undefined;
            numCols?: undefined;
            rows?: undefined;
            header?: undefined;
            caption?: undefined;
            striped?: undefined;
            bordered?: undefined;
            hover?: undefined;
            condensed?: undefined;
            legend?: undefined;
        } | {
            input: boolean;
            tree: boolean;
            components: {
                input: boolean;
                tableView: boolean;
                inputType: string;
                inputMask: string;
                label: string;
                key: string;
                placeholder: string;
                prefix: string;
                suffix: string;
                multiple: boolean;
                defaultValue: string;
                protected: boolean;
                unique: boolean;
                persistent: boolean;
                hidden: boolean;
                clearOnHide: boolean;
                validate: {
                    required: boolean;
                    minLength: string;
                    maxLength: string;
                    pattern: string;
                    custom: string;
                    customPrivate: boolean;
                };
                conditional: {
                    show: string;
                    when: null;
                    eq: string;
                };
                type: string;
                hideLabel: boolean;
                labelPosition: string;
                tags: never[];
                properties: {};
                lockKey: boolean;
            }[];
            tableView: boolean;
            label: string;
            key: string;
            protected: boolean;
            persistent: boolean;
            clearOnHide: boolean;
            type: string;
            labelPosition: string;
            tags: never[];
            conditional: {
                show: string;
                when: string;
                eq: string;
            };
            properties: {};
            hideLabel: boolean;
            validate?: undefined;
            defaultValue?: undefined;
            datagridLabel?: undefined;
            inputType?: undefined;
            lockKey?: undefined;
            hidden?: undefined;
            name?: undefined;
            value?: undefined;
            inputMask?: undefined;
            placeholder?: undefined;
            prefix?: undefined;
            suffix?: undefined;
            multiple?: undefined;
            unique?: undefined;
            addAnotherPosition?: undefined;
            templates?: undefined;
            title?: undefined;
            theme?: undefined;
            breadcrumb?: undefined;
            columns?: undefined;
            customClass?: undefined;
            numRows?: undefined;
            numCols?: undefined;
            rows?: undefined;
            header?: undefined;
            caption?: undefined;
            striped?: undefined;
            bordered?: undefined;
            hover?: undefined;
            condensed?: undefined;
            legend?: undefined;
        } | {
            conditional: {
                eq: string;
                when: string;
                show: string;
            };
            tags: never[];
            type: string;
            clearOnHide: boolean;
            persistent: boolean;
            protected: boolean;
            key: string;
            label: string;
            tableView: boolean;
            components: {
                hideLabel: boolean;
                tags: never[];
                type: string;
                conditional: {
                    eq: string;
                    when: null;
                    show: string;
                };
                validate: {
                    customPrivate: boolean;
                    custom: string;
                    pattern: string;
                    maxLength: string;
                    minLength: string;
                    required: boolean;
                };
                clearOnHide: boolean;
                persistent: boolean;
                unique: boolean;
                protected: boolean;
                defaultValue: string;
                multiple: boolean;
                suffix: string;
                prefix: string;
                placeholder: string;
                key: string;
                label: string;
                inputMask: string;
                inputType: string;
                tableView: boolean;
                input: boolean;
                hidden: boolean;
                labelPosition: string;
                properties: {};
                lockKey: boolean;
            }[];
            tree: boolean;
            input: boolean;
            hidden: boolean;
            hideLabel: boolean;
            addAnotherPosition: string;
            properties: {};
            lockKey: boolean;
            validate?: undefined;
            defaultValue?: undefined;
            datagridLabel?: undefined;
            inputType?: undefined;
            name?: undefined;
            value?: undefined;
            inputMask?: undefined;
            placeholder?: undefined;
            prefix?: undefined;
            suffix?: undefined;
            multiple?: undefined;
            unique?: undefined;
            labelPosition?: undefined;
            templates?: undefined;
            title?: undefined;
            theme?: undefined;
            breadcrumb?: undefined;
            columns?: undefined;
            customClass?: undefined;
            numRows?: undefined;
            numCols?: undefined;
            rows?: undefined;
            header?: undefined;
            caption?: undefined;
            striped?: undefined;
            bordered?: undefined;
            hover?: undefined;
            condensed?: undefined;
            legend?: undefined;
        } | {
            input: boolean;
            tree: boolean;
            components: {
                input: boolean;
                tableView: boolean;
                inputType: string;
                inputMask: string;
                label: string;
                key: string;
                placeholder: string;
                prefix: string;
                suffix: string;
                multiple: boolean;
                defaultValue: string;
                protected: boolean;
                unique: boolean;
                persistent: boolean;
                hidden: boolean;
                clearOnHide: boolean;
                validate: {
                    required: boolean;
                    minLength: string;
                    maxLength: string;
                    pattern: string;
                    custom: string;
                    customPrivate: boolean;
                };
                conditional: {
                    show: string;
                    when: null;
                    eq: string;
                };
                type: string;
                hideLabel: boolean;
                labelPosition: string;
                tags: never[];
                properties: {};
                lockKey: boolean;
            }[];
            multiple: boolean;
            tableView: boolean;
            label: string;
            key: string;
            protected: boolean;
            persistent: boolean;
            hidden: boolean;
            clearOnHide: boolean;
            templates: {
                header: string;
                row: string;
                footer: string;
            };
            type: string;
            tags: never[];
            conditional: {
                show: string;
                when: string;
                eq: string;
            };
            properties: {};
            lockKey: boolean;
            hideLabel: boolean;
            validate?: undefined;
            defaultValue?: undefined;
            datagridLabel?: undefined;
            inputType?: undefined;
            name?: undefined;
            value?: undefined;
            inputMask?: undefined;
            placeholder?: undefined;
            prefix?: undefined;
            suffix?: undefined;
            unique?: undefined;
            labelPosition?: undefined;
            addAnotherPosition?: undefined;
            title?: undefined;
            theme?: undefined;
            breadcrumb?: undefined;
            columns?: undefined;
            customClass?: undefined;
            numRows?: undefined;
            numCols?: undefined;
            rows?: undefined;
            header?: undefined;
            caption?: undefined;
            striped?: undefined;
            bordered?: undefined;
            hover?: undefined;
            condensed?: undefined;
            legend?: undefined;
        } | {
            key: string;
            input: boolean;
            title: string;
            theme: string;
            components: {
                input: boolean;
                tableView: boolean;
                inputType: string;
                inputMask: string;
                label: string;
                key: string;
                placeholder: string;
                prefix: string;
                suffix: string;
                multiple: boolean;
                defaultValue: string;
                protected: boolean;
                unique: boolean;
                persistent: boolean;
                clearOnHide: boolean;
                validate: {
                    required: boolean;
                    minLength: string;
                    maxLength: string;
                    pattern: string;
                    custom: string;
                    customPrivate: boolean;
                };
                conditional: {
                    show: string;
                    when: null;
                    eq: string;
                };
                type: string;
                tags: never[];
                hidden: boolean;
                hideLabel: boolean;
                labelPosition: string;
                properties: {};
                lockKey: boolean;
            }[];
            type: string;
            tags: never[];
            conditional: {
                show: string;
                when: string;
                eq: string;
            };
            clearOnHide: boolean;
            tableView: boolean;
            hideLabel: boolean;
            breadcrumb: string;
            properties: {};
            lockKey: boolean;
            validate?: undefined;
            persistent?: undefined;
            protected?: undefined;
            defaultValue?: undefined;
            datagridLabel?: undefined;
            label?: undefined;
            inputType?: undefined;
            hidden?: undefined;
            name?: undefined;
            value?: undefined;
            inputMask?: undefined;
            placeholder?: undefined;
            prefix?: undefined;
            suffix?: undefined;
            multiple?: undefined;
            unique?: undefined;
            labelPosition?: undefined;
            tree?: undefined;
            addAnotherPosition?: undefined;
            templates?: undefined;
            columns?: undefined;
            customClass?: undefined;
            numRows?: undefined;
            numCols?: undefined;
            rows?: undefined;
            header?: undefined;
            caption?: undefined;
            striped?: undefined;
            bordered?: undefined;
            hover?: undefined;
            condensed?: undefined;
            legend?: undefined;
        } | {
            input: boolean;
            key: string;
            columns: {
                components: {
                    input: boolean;
                    tableView: boolean;
                    inputType: string;
                    inputMask: string;
                    label: string;
                    key: string;
                    placeholder: string;
                    prefix: string;
                    suffix: string;
                    multiple: boolean;
                    defaultValue: string;
                    protected: boolean;
                    unique: boolean;
                    persistent: boolean;
                    clearOnHide: boolean;
                    validate: {
                        required: boolean;
                        minLength: string;
                        maxLength: string;
                        pattern: string;
                        custom: string;
                        customPrivate: boolean;
                    };
                    conditional: {
                        show: string;
                        when: null;
                        eq: string;
                    };
                    type: string;
                    tags: never[];
                    hidden: boolean;
                    hideLabel: boolean;
                    labelPosition: string;
                    properties: {};
                    lockKey: boolean;
                }[];
                width: number;
                offset: number;
                push: number;
                pull: number;
            }[];
            type: string;
            tags: never[];
            conditional: {
                show: string;
                when: string;
                eq: string;
            };
            customClass: string;
            clearOnHide: boolean;
            tableView: boolean;
            hideLabel: boolean;
            properties: {};
            lockKey: boolean;
            validate?: undefined;
            persistent?: undefined;
            protected?: undefined;
            defaultValue?: undefined;
            datagridLabel?: undefined;
            label?: undefined;
            inputType?: undefined;
            hidden?: undefined;
            name?: undefined;
            value?: undefined;
            inputMask?: undefined;
            placeholder?: undefined;
            prefix?: undefined;
            suffix?: undefined;
            multiple?: undefined;
            unique?: undefined;
            labelPosition?: undefined;
            tree?: undefined;
            components?: undefined;
            addAnotherPosition?: undefined;
            templates?: undefined;
            title?: undefined;
            theme?: undefined;
            breadcrumb?: undefined;
            numRows?: undefined;
            numCols?: undefined;
            rows?: undefined;
            header?: undefined;
            caption?: undefined;
            striped?: undefined;
            bordered?: undefined;
            hover?: undefined;
            condensed?: undefined;
            legend?: undefined;
        } | {
            input: boolean;
            key: string;
            numRows: number;
            numCols: number;
            rows: {
                components: {
                    input: boolean;
                    tableView: boolean;
                    inputType: string;
                    inputMask: string;
                    label: string;
                    key: string;
                    placeholder: string;
                    prefix: string;
                    suffix: string;
                    multiple: boolean;
                    defaultValue: string;
                    protected: boolean;
                    unique: boolean;
                    persistent: boolean;
                    clearOnHide: boolean;
                    validate: {
                        required: boolean;
                        minLength: string;
                        maxLength: string;
                        pattern: string;
                        custom: string;
                        customPrivate: boolean;
                    };
                    conditional: {
                        show: string;
                        when: null;
                        eq: string;
                    };
                    type: string;
                    tags: never[];
                    hidden: boolean;
                    hideLabel: boolean;
                    labelPosition: string;
                    properties: {};
                    lockKey: boolean;
                }[];
            }[][];
            header: never[];
            caption: string;
            striped: boolean;
            bordered: boolean;
            hover: boolean;
            condensed: boolean;
            type: string;
            tags: never[];
            conditional: {
                show: string;
                when: string;
                eq: string;
            };
            clearOnHide: boolean;
            tableView: boolean;
            hideLabel: boolean;
            properties: {};
            lockKey: boolean;
            validate?: undefined;
            persistent?: undefined;
            protected?: undefined;
            defaultValue?: undefined;
            datagridLabel?: undefined;
            label?: undefined;
            inputType?: undefined;
            hidden?: undefined;
            name?: undefined;
            value?: undefined;
            inputMask?: undefined;
            placeholder?: undefined;
            prefix?: undefined;
            suffix?: undefined;
            multiple?: undefined;
            unique?: undefined;
            labelPosition?: undefined;
            tree?: undefined;
            components?: undefined;
            addAnotherPosition?: undefined;
            templates?: undefined;
            title?: undefined;
            theme?: undefined;
            breadcrumb?: undefined;
            columns?: undefined;
            customClass?: undefined;
            legend?: undefined;
        } | {
            clearOnHide: boolean;
            key: string;
            input: boolean;
            components: {
                input: boolean;
                tableView: boolean;
                inputType: string;
                inputMask: string;
                label: string;
                key: string;
                placeholder: string;
                prefix: string;
                suffix: string;
                multiple: boolean;
                defaultValue: string;
                protected: boolean;
                unique: boolean;
                persistent: boolean;
                hidden: boolean;
                clearOnHide: boolean;
                validate: {
                    required: boolean;
                    minLength: string;
                    maxLength: string;
                    pattern: string;
                    custom: string;
                    customPrivate: boolean;
                };
                conditional: {
                    show: string;
                    when: null;
                    eq: string;
                };
                type: string;
                hideLabel: boolean;
                labelPosition: string;
                tags: never[];
                properties: {};
                lockKey: boolean;
            }[];
            tableView: boolean;
            type: string;
            hideLabel: boolean;
            tags: never[];
            conditional: {
                show: string;
                when: string;
                eq: string;
            };
            properties: {};
            validate?: undefined;
            persistent?: undefined;
            protected?: undefined;
            defaultValue?: undefined;
            datagridLabel?: undefined;
            label?: undefined;
            inputType?: undefined;
            lockKey?: undefined;
            hidden?: undefined;
            name?: undefined;
            value?: undefined;
            inputMask?: undefined;
            placeholder?: undefined;
            prefix?: undefined;
            suffix?: undefined;
            multiple?: undefined;
            unique?: undefined;
            labelPosition?: undefined;
            tree?: undefined;
            addAnotherPosition?: undefined;
            templates?: undefined;
            title?: undefined;
            theme?: undefined;
            breadcrumb?: undefined;
            columns?: undefined;
            customClass?: undefined;
            numRows?: undefined;
            numCols?: undefined;
            rows?: undefined;
            header?: undefined;
            caption?: undefined;
            striped?: undefined;
            bordered?: undefined;
            hover?: undefined;
            condensed?: undefined;
            legend?: undefined;
        } | {
            clearOnHide: boolean;
            key: string;
            input: boolean;
            tableView: boolean;
            legend: string;
            components: {
                input: boolean;
                tableView: boolean;
                inputType: string;
                inputMask: string;
                label: string;
                key: string;
                placeholder: string;
                prefix: string;
                suffix: string;
                multiple: boolean;
                defaultValue: string;
                protected: boolean;
                unique: boolean;
                persistent: boolean;
                hidden: boolean;
                clearOnHide: boolean;
                validate: {
                    required: boolean;
                    minLength: string;
                    maxLength: string;
                    pattern: string;
                    custom: string;
                    customPrivate: boolean;
                };
                conditional: {
                    show: string;
                    when: null;
                    eq: string;
                };
                type: string;
                hideLabel: boolean;
                labelPosition: string;
                tags: never[];
                properties: {};
                lockKey: boolean;
            }[];
            type: string;
            hideLabel: boolean;
            tags: never[];
            conditional: {
                show: string;
                when: string;
                eq: string;
            };
            properties: {};
            validate?: undefined;
            persistent?: undefined;
            protected?: undefined;
            defaultValue?: undefined;
            datagridLabel?: undefined;
            label?: undefined;
            inputType?: undefined;
            lockKey?: undefined;
            hidden?: undefined;
            name?: undefined;
            value?: undefined;
            inputMask?: undefined;
            placeholder?: undefined;
            prefix?: undefined;
            suffix?: undefined;
            multiple?: undefined;
            unique?: undefined;
            labelPosition?: undefined;
            tree?: undefined;
            addAnotherPosition?: undefined;
            templates?: undefined;
            title?: undefined;
            theme?: undefined;
            breadcrumb?: undefined;
            columns?: undefined;
            customClass?: undefined;
            numRows?: undefined;
            numCols?: undefined;
            rows?: undefined;
            header?: undefined;
            caption?: undefined;
            striped?: undefined;
            bordered?: undefined;
            hover?: undefined;
            condensed?: undefined;
        })[];
    }
    const tests: {
        'Test starting hidden'(form: any, done: any): void;
        'Test starting visible'(form: any, done: any): void;
        'Test with data'(form: any, done: any): void;
        'Test changing visible from hidden to visible'(form: any, done: any): void;
        'Test changing visible from visible to hidden'(form: any, done: any): void;
    };
}
export default _default;
