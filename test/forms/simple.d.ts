declare namespace _default {
    const title: string;
    namespace form {
        export const _id: string;
        export const modified: string;
        const title_1: string;
        export { title_1 as title };
        export const display: string;
        export const type: string;
        export const name: string;
        export const path: string;
        export const project: string;
        export const created: string;
        export const components: ({
            tags: never[];
            type: string;
            conditional: {
                eq: string;
                when: null;
                show: string;
            };
            validate: {
                customPrivate: boolean;
                custom: string;
                pattern: string;
                maxLength: number;
                minLength: number;
                required: boolean;
            };
            persistent: boolean;
            unique: boolean;
            protected: boolean;
            defaultValue: string;
            multiple: boolean;
            suffix: string;
            prefix: string;
            placeholder: string;
            key: string;
            label: string;
            inputMask: string;
            inputType: string;
            tableView: boolean;
            input: boolean;
            kickbox?: undefined;
            maxDate?: undefined;
            minDate?: undefined;
            format?: undefined;
            enableDate?: undefined;
            enableTime?: undefined;
            defaultDate?: undefined;
            datepickerMode?: undefined;
            datePicker?: undefined;
            timePicker?: undefined;
            theme?: undefined;
            disableOnInvalid?: undefined;
            action?: undefined;
            block?: undefined;
            rightIcon?: undefined;
            leftIcon?: undefined;
            size?: undefined;
        } | {
            tags: never[];
            type: string;
            conditional: {
                eq: string;
                when: null;
                show: string;
            };
            validate: {
                customPrivate: boolean;
                custom: string;
                pattern: string;
                maxLength: string;
                minLength: string;
                required: boolean;
            };
            persistent: boolean;
            unique: boolean;
            protected: boolean;
            defaultValue: string;
            multiple: boolean;
            suffix: string;
            prefix: string;
            placeholder: string;
            key: string;
            label: string;
            inputMask: string;
            inputType: string;
            tableView: boolean;
            input: boolean;
            kickbox?: undefined;
            maxDate?: undefined;
            minDate?: undefined;
            format?: undefined;
            enableDate?: undefined;
            enableTime?: undefined;
            defaultDate?: undefined;
            datepickerMode?: undefined;
            datePicker?: undefined;
            timePicker?: undefined;
            theme?: undefined;
            disableOnInvalid?: undefined;
            action?: undefined;
            block?: undefined;
            rightIcon?: undefined;
            leftIcon?: undefined;
            size?: undefined;
        } | {
            conditional: {
                eq: string;
                when: null;
                show: string;
            };
            tags: never[];
            type: string;
            kickbox: {
                enabled: boolean;
            };
            persistent: boolean;
            unique: boolean;
            protected: boolean;
            defaultValue: string;
            suffix: string;
            prefix: string;
            placeholder: string;
            key: string;
            label: string;
            inputType: string;
            tableView: boolean;
            input: boolean;
            validate?: undefined;
            multiple?: undefined;
            inputMask?: undefined;
            maxDate?: undefined;
            minDate?: undefined;
            format?: undefined;
            enableDate?: undefined;
            enableTime?: undefined;
            defaultDate?: undefined;
            datepickerMode?: undefined;
            datePicker?: undefined;
            timePicker?: undefined;
            theme?: undefined;
            disableOnInvalid?: undefined;
            action?: undefined;
            block?: undefined;
            rightIcon?: undefined;
            leftIcon?: undefined;
            size?: undefined;
        } | {
            conditional: {
                eq: string;
                when: null;
                show: string;
            };
            tags: never[];
            type: string;
            persistent: boolean;
            protected: boolean;
            suffix: string;
            prefix: string;
            placeholder: string;
            key: string;
            label: string;
            inputType: string;
            tableView: boolean;
            input: boolean;
            validate?: undefined;
            unique?: undefined;
            defaultValue?: undefined;
            multiple?: undefined;
            inputMask?: undefined;
            kickbox?: undefined;
            maxDate?: undefined;
            minDate?: undefined;
            format?: undefined;
            enableDate?: undefined;
            enableTime?: undefined;
            defaultDate?: undefined;
            datepickerMode?: undefined;
            datePicker?: undefined;
            timePicker?: undefined;
            theme?: undefined;
            disableOnInvalid?: undefined;
            action?: undefined;
            block?: undefined;
            rightIcon?: undefined;
            leftIcon?: undefined;
            size?: undefined;
        } | {
            validate: {
                custom: string;
                customPrivate?: undefined;
                pattern?: undefined;
                maxLength?: undefined;
                minLength?: undefined;
                required?: undefined;
            };
            conditional: {
                eq: string;
                when: null;
                show: string;
            };
            tags: never[];
            type: string;
            persistent: boolean;
            protected: boolean;
            suffix: string;
            prefix: string;
            placeholder: string;
            key: string;
            label: string;
            inputType: string;
            tableView: boolean;
            input: boolean;
            unique?: undefined;
            defaultValue?: undefined;
            multiple?: undefined;
            inputMask?: undefined;
            kickbox?: undefined;
            maxDate?: undefined;
            minDate?: undefined;
            format?: undefined;
            enableDate?: undefined;
            enableTime?: undefined;
            defaultDate?: undefined;
            datepickerMode?: undefined;
            datePicker?: undefined;
            timePicker?: undefined;
            theme?: undefined;
            disableOnInvalid?: undefined;
            action?: undefined;
            block?: undefined;
            rightIcon?: undefined;
            leftIcon?: undefined;
            size?: undefined;
        } | {
            maxDate: null;
            minDate: null;
            input: boolean;
            tableView: boolean;
            label: string;
            key: string;
            placeholder: string;
            format: string;
            enableDate: boolean;
            enableTime: boolean;
            defaultDate: string;
            datepickerMode: string;
            datePicker: {
                showWeeks: boolean;
                startingDay: number;
                initDate: string;
                minMode: string;
                maxMode: string;
                yearRange: string;
                datepickerMode: string;
            };
            timePicker: {
                hourStep: number;
                minuteStep: number;
                showMeridian: boolean;
                readonlyInput: boolean;
                mousewheel: boolean;
                arrowkeys: boolean;
            };
            protected: boolean;
            persistent: boolean;
            validate: {
                required: boolean;
                custom: string;
                customPrivate?: undefined;
                pattern?: undefined;
                maxLength?: undefined;
                minLength?: undefined;
            };
            type: string;
            tags: never[];
            conditional: {
                show: string;
                when: null;
                eq: string;
            };
            unique?: undefined;
            defaultValue?: undefined;
            multiple?: undefined;
            suffix?: undefined;
            prefix?: undefined;
            inputMask?: undefined;
            inputType?: undefined;
            kickbox?: undefined;
            theme?: undefined;
            disableOnInvalid?: undefined;
            action?: undefined;
            block?: undefined;
            rightIcon?: undefined;
            leftIcon?: undefined;
            size?: undefined;
        } | {
            type: string;
            theme: string;
            disableOnInvalid: boolean;
            action: string;
            block: boolean;
            rightIcon: string;
            leftIcon: string;
            size: string;
            key: string;
            tableView: boolean;
            label: string;
            input: boolean;
            tags?: undefined;
            conditional?: undefined;
            validate?: undefined;
            persistent?: undefined;
            unique?: undefined;
            protected?: undefined;
            defaultValue?: undefined;
            multiple?: undefined;
            suffix?: undefined;
            prefix?: undefined;
            placeholder?: undefined;
            inputMask?: undefined;
            inputType?: undefined;
            kickbox?: undefined;
            maxDate?: undefined;
            minDate?: undefined;
            format?: undefined;
            enableDate?: undefined;
            enableTime?: undefined;
            defaultDate?: undefined;
            datepickerMode?: undefined;
            datePicker?: undefined;
            timePicker?: undefined;
        })[];
        export const owner: string;
        export const submissionAccess: {
            type: string;
            roles: string[];
        }[];
        export const access: {
            type: string;
            roles: string[];
        }[];
        export const tags: never[];
    }
    const tests: {
        'Test valid submission'(form: any, done: any): void;
        'Test invalid email'(form: any, done: any): void;
    };
}
export default _default;
