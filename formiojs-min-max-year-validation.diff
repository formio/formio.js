From 72a9bc3c829bd2fa861476d43502e00725401571 Mon Sep 17 00:00:00 2001
From: Alexandra Romanenko <butterfly.in.a.cast@gmail.com>
Date: Fri, 17 Jan 2020 16:20:12 +0300
Subject: [PATCH] Min and max year validation added

---
 src/components/day/Day.js      |  8 ++++++-
 src/i18n.js                    |  2 ++
 src/validator/Validator.js     | 40 ++++++++++++++++++++++++++++++++++
 src/validator/rules/MaxYear.js | 19 ++++++++++++++++
 src/validator/rules/MinYear.js | 19 ++++++++++++++++
 src/validator/rules/index.js   |  4 ++++
 6 files changed, 91 insertions(+), 1 deletion(-)
 create mode 100644 src/validator/rules/MaxYear.js
 create mode 100644 src/validator/rules/MinYear.js

diff --git a/src/components/day/Day.js b/src/components/day/Day.js
index f68e1c882..fce8e3237 100644
--- a/src/components/day/Day.js
+++ b/src/components/day/Day.js
@@ -199,7 +199,13 @@ export default class DayComponent extends Field {
 
   init() {
     super.init();
-    this.validators = this.validators.concat(['day', 'maxDate', 'minDate']);
+    this.validators = this.validators.concat(['day', 'maxDate', 'minDate', 'minYear', 'maxYear']);
+
+    const minYear = this.component.fields.year.minYear;
+    const maxYear = this.component.fields.year.maxYear;
+    this.component.maxYear = maxYear;
+    this.component.minYear = minYear;
+
     const dateFormatInfo = getLocaleDateFormatInfo(this.options.language);
     this.dayFirst = this.component.useLocaleSettings
       ? dateFormatInfo.dayFirst
diff --git a/src/i18n.js b/src/i18n.js
index a15d98ef2..51030b341 100644
--- a/src/i18n.js
+++ b/src/i18n.js
@@ -20,6 +20,8 @@ export default {
         max: '{{field}} cannot be greater than {{max}}.',
         maxDate: '{{field}} should not contain date after {{- maxDate}}',
         minDate: '{{field}} should not contain date before {{- minDate}}',
+        maxYear: '{{field}} should not contain year greater than {{maxYear}}',
+        minYear: '{{field}} should not contain year less than {{minYear}}',
         invalid_email: '{{field}} must be a valid email.', // eslint-disable-line camelcase
         invalid_url: '{{field}} must be a valid url.', // eslint-disable-line camelcase
         invalid_regex: '{{field}} does not match the pattern {{regex}}.', // eslint-disable-line camelcase
diff --git a/src/validator/Validator.js b/src/validator/Validator.js
index 54fbbd5e4..1e737b56b 100644
--- a/src/validator/Validator.js
+++ b/src/validator/Validator.js
@@ -662,6 +662,46 @@ class ValidationChecker {
           return date.isAfter(minDate) || date.isSame(minDate);
         }
       },
+      minYear: {
+        key: 'minYear',
+        message(component, setting) {
+          return component.t(component.errorMessage('minYear'), {
+            field: component.errorLabel,
+            minYear: setting,
+          });
+        },
+        check(component, setting, value) {
+          const minYear = setting;
+          let year = /\d{4}$/.exec(value);
+          year = year ? year[0] : null;
+
+          if (!minYear || !year) {
+            return true;
+          }
+
+          return +year >= +minYear;
+        }
+      },
+      maxYear: {
+        key: 'maxYear',
+        message(component, setting) {
+          return component.t(component.errorMessage('maxYear'), {
+            field: component.errorLabel,
+            maxYear: setting,
+          });
+        },
+        check(component, setting, value) {
+          const maxYear = setting;
+          let year = /\d{4}$/.exec(value);
+          year = year ? year[0] : null;
+
+          if (!maxYear || !year) {
+            return true;
+          }
+
+          return +year <= +maxYear;
+        }
+      },
       calendar: {
         key: 'validate.calendar',
         messageText: '',
diff --git a/src/validator/rules/MaxYear.js b/src/validator/rules/MaxYear.js
new file mode 100644
index 000000000..5fb7d4048
--- /dev/null
+++ b/src/validator/rules/MaxYear.js
@@ -0,0 +1,19 @@
+import _ from 'lodash';
+
+const Rule = require('./Rule');
+
+module.exports = class MaxYear extends Rule {
+  defaultMessage = '{{field}} should not contain year greater than {{maxYear}}';
+
+  check(value) {
+    const maxYear = this.settings;
+    let year = /\d{4}$/.exec(value);
+    year = year ? year[0] : null;
+
+    if (!maxYear || !year) {
+      return true;
+    }
+
+    return +year <= +maxYear;
+  }
+};
diff --git a/src/validator/rules/MinYear.js b/src/validator/rules/MinYear.js
new file mode 100644
index 000000000..ee5c7bff9
--- /dev/null
+++ b/src/validator/rules/MinYear.js
@@ -0,0 +1,19 @@
+import _ from 'lodash';
+
+const Rule = require('./Rule');
+
+module.exports = class MinYear extends Rule {
+  defaultMessage = '{{field}} should not contain year less than {{minYear}}';
+
+  check(value) {
+    const minYear = this.settings;
+    let year = /\d{4}$/.exec(value);
+    year = year ? year[0] : null;
+
+    if (!minYear || !year) {
+      return true;
+    }
+
+    return +year >= +minYear;
+  }
+};
diff --git a/src/validator/rules/index.js b/src/validator/rules/index.js
index 8aad931db..8eac5780c 100644
--- a/src/validator/rules/index.js
+++ b/src/validator/rules/index.js
@@ -17,6 +17,8 @@ const required = require('./Required');
 const select = require('./Select');
 const unique = require('./Unique');
 const url = require('./Url');
+const minYear = require('./MinYear');
+const maxYear = require('./MaxYear');
 
 module.exports = {
   custom,
@@ -38,4 +40,6 @@ module.exports = {
   select,
   unique,
   url,
+  minYear,
+  maxYear
 };
-- 
2.23.0.windows.1

